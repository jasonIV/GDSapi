# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: gdsapi
# app and org for use with dashboard.serverless.com
app: gdsapi
org: jasoniv

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
# frameworkVersion: "=X.X.X"

provider:
  name: aws
  runtime: nodejs12.x
  stage: dev
  environment:
    USERSCREDENTIALS_TABLE: ${self:service}-${opt:stage, self:provider.stage}-usercredential
    USERSINFOS_TABLE: ${self:service}-${opt:stage, self:provider.stage}-userinfo
    BALANCERECORDS_TABLE: ${self:service}-${opt:stage, self:provider.stage}-balancerecords
    SECPASS: secret-passphrase
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/*"
  region: ap-southeast-1

resources: # CloudFormation template syntax from here on.
  Resources:
    UsersCredentials:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName:  ${self:provider.environment.USERSCREDENTIALS_TABLE} 
        AttributeDefinitions:
          - AttributeName: phone
            AttributeType: S
        KeySchema:
          - AttributeName: phone
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
    UsersInfos:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName:  ${self:provider.environment.USERSINFOS_TABLE} 
        AttributeDefinitions:
          - AttributeName: phone
            AttributeType: S
        KeySchema:
          - AttributeName: phone
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
    BalanceRecords:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName:  ${self:provider.environment.BALANCERECORDS_TABLE} 
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
            
functions:
  signup:
    handler: functions/signup.signUp
    events:
      - http:
          path: api/auth/signup
          method: post
          cors: true
  login:
    handler: functions/login.logIn
    events:
      - http:
          path: api/auth/login
          method: post
          cors: true
  getuserdata:
    handler: functions/getuserdata.getUserData
    events:
      - http:
          path: api/userdata/get
          method: post
          cors: true
  balancecheckout:
    handler: functions/balancecheckout.balanceCheckOut
    events:
      - http:
          path: api/balance/checkout
          method: put
          cors: true
  addbalance:
    handler: functions/addbalance.addBalance
    events:
      - http:
          path: api/balance/add
          method: put
          cors: true
  getbalancerecords:
    handler: functions/getbalancerecords.getBalanceRecords
    events:
      - http:
          path: api/balance/get
          method: get
          cors: true
  rollbackbalance:
    handler: functions/rollbackbalance.rollbackBalance
    events:
      - http:
          path: api/balance/rollback
          method: put
          cors: true
  relay:
    handler: functions/relay.relay
    events:
      - http:
          path: api/relay
          method: post
          cors: true
